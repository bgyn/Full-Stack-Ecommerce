generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  role       Role     @default(USER)
  isActive   Boolean  @default(true) @map("is_active")
  isVerified Boolean  @default(false) @map("is_verified")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  fcms       FCM[]
  profile    Profile?

  @@map("user")
}

model FCM {
  id          Int      @id @default(autoincrement())
  userId      Int
  token       String
  device_type String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("fcm")
}

model Profile {
  id           Int       @id @default(autoincrement())
  userId       Int       @unique
  profileImage String?
  name         String
  phone        Int?
  dob          DateTime?
  gender       String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profile")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  productVariants ProductVariant[]
  categories      Categories[]     @relation("ProductCategories")

  @@map("product")
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  productId Int
  price     Float
  sku       String
  color     String
  size      String
  stock     Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  product Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
  images  ProductImage[]

  @@map("product_variants")
}

model ProductImage {
  id               Int      @id @default(autoincrement())
  productVariantId Int
  image            String
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  productVariant ProductVariant @relation(fields: [productVariantId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model Categories {
  id            Int       @id @default(autoincrement())
  categoryName  String    @map("category_name")
  categoryImage String    @map("category_image")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  products      Product[] @relation("ProductCategories")

  @@map("categories")
}
